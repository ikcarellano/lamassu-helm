apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: api-gateway-cert
  namespace: {{.Release.Namespace}}
spec:
  isCA: false
  commonName: {{.Values.domain}}
  dnsNames:
    - "{{.Values.domain}}"
    - "*.{{.Values.domain}}"
  secretName: test
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: lamassu-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: api-gateway-cert-up
  namespace: {{.Release.Namespace}}
spec:
  isCA: false
  commonName: api-gateway
  dnsNames:
    - "api-gateway"
  secretName: test2
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: lamassu-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: api-gateway-cm
  namespace: {{.Release.Namespace}}
data:
  config.yaml: |
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9900

    static_resources:
      listeners:
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 80
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      virtual_hosts:
                        - name: backend
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/" }
                              redirect:
                                path_redirect: "/"
                                https_redirect: true
                    http_filters:
                      - name: envoy.filters.http.router
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 443
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    generate_request_id: true
                    tracing:
                      provider:
                        name: envoy.tracers.dynamic_ot
                        typed_config:
                          "@type": type.googleapis.com/envoy.config.trace.v3.DynamicOtConfig
                          library: /usr/local/lib/libjaegertracing_plugin.so
                          config:
                            service_name: gateway
                            sampler:
                              type: const
                              param: 1
                            reporter:
                              localAgentHostPort: jaeger:6831
                            headers:
                              jaegerDebugHeader: jaeger-debug-id  
                              jaegerBaggageHeader: jaeger-baggage
                              traceBaggageHeaderPrefix: uberctx-
                            baggage_restrictions:
                              denyBaggageOnInitializationFailure: false
                              hostPort: ""
                    stat_prefix: ingress_http
                    forward_client_cert_details: "APPEND_FORWARD"
                    set_current_client_cert_details: 
                      cert: true
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: apis_ui
                          domains:
                            - {{.Values.domain}}
                          routes:
                            - match:
                                safe_regex:
                                  google_re2: {}
                                  regex: "\/api\/ca\/v1\/docs(.*|\/.*)*"
                              route:
                                regex_rewrite: 
                                  pattern: 
                                    google_re2: {}
                                    regex: \/api\/ca\/
                                  substitution: /
                                cluster: api_ca_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true

                            - match:
                                safe_regex:
                                  google_re2: {}
                                  regex: "\/api\/dmsenroller\/v1\/docs(.*|\/.*)*"
                              route:
                                regex_rewrite: 
                                  pattern: 
                                    google_re2: {}
                                    regex: \/api\/dmsenroller\/
                                  substitution: /
                                cluster: api_dms_enroller_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true

                            - match:
                                safe_regex:
                                  google_re2: {}
                                  regex: "\/api\/devmanager\/v1\/docs(.*|\/.*)*"
                              route:
                                regex_rewrite: 
                                  pattern: 
                                    google_re2: {}
                                    regex: \/api\/devmanager\/
                                  substitution: /
                                cluster: api_device_manager_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true
                                  
                            - match:
                                prefix: "/api/ca/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_ca_cluster
                                
                            - match:
                                prefix: "/api/cloudproxy/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_cloud_proxy_cluster

                            - match:
                                prefix: "/api/devmanager/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_device_manager_cluster

                            - match:
                                prefix: "/api/dmsenroller/"
                              route:
                                prefix_rewrite: "/"
                                cluster: api_dms_enroller_cluster

                            - match:
                                prefix: "/"
                              route:
                                cluster: ui_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                envoy.filters.http.jwt_authn:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                  disabled: true

                        - name: vault
                          domains:
                            - "vault.{{.Values.domain}}"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: vault_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                # envoy.filters.http.jwt_authn:
                                #   "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                #   disabled: true

                        - name: rabbitmq
                          domains:
                            - "rabbitmq.{{.Values.domain}}"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: rabbitmq_api_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                          request_headers_to_add:
                            - header:
                                key: "Authorization"
                                value: "Basic Z3Vlc3Q6Z3Vlc3Q="
                              append: false

                        - name: rabbitmq-ui
                          domains:
                            - "ui-rabbitmq.{{.Values.domain}}"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: rabbitmq_api_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                              

                        - name: consul
                          domains:
                            - "consul.{{.Values.domain}}"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: consul_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                # envoy.filters.http.jwt_authn:
                                #   "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                #   disabled: true


                        - name: auth
                          domains:
                            - "auth.{{.Values.domain}}"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: auth_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                # envoy.filters.http.jwt_authn:
                                #   "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                #   disabled: true


                        - name: jaeger-tracing
                          domains:
                            - "tracing.{{.Values.domain}}"
                          routes:
                            - match:
                                prefix: "/"
                              route:
                                cluster: jaeger_ui_cluster
                              typed_per_filter_config:
                                envoy.filters.http.ext_authz:
                                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                                  disabled: true
                                # envoy.filters.http.jwt_authn:
                                #   "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig
                                #   disabled: true

                    http_filters:
                      - name: envoy.ext_authz
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                          transport_api_version: V3
                          with_request_body:
                            max_request_bytes: 8192
                            allow_partial_message: true
                          failure_mode_allow: false
                          grpc_service:
                            google_grpc:
                              target_uri: opa-server:9191
                              stat_prefix: ext_authz
                            timeout: 0.5s

                      - name: envoy.filters.http.jwt_authn
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                          providers:
                            lamassu_oidc_provider:
                              forward: true
                              remote_jwks:
                                http_uri:
                                  uri: https://auth:8443/auth/realms/lamassu/protocol/openid-connect/certs
                                  cluster: auth_cluster
                                  timeout: 1s
                                cache_duration:
                                  seconds: 300
                          bypass_cors_preflight: true
                          rules:
                            - match:
                                prefix: "/"
                                headers: 
                                  - name: ":authority"
                                    exact_match: "tracing.{{.Values.domain}}"
                            - match:
                                prefix: "/"
                                headers: 
                                  - name: ":authority"
                                    exact_match: "rabbitmq.{{.Values.domain}}"
                            - match:
                                prefix: "/"
                                headers: 
                                  - name: ":authority"
                                    exact_match: "ui-rabbitmq.{{.Values.domain}}"
                            - match:
                                prefix: "/api/devmanager/.well-known/est"
                            - match:
                                prefix: "/api/"
                              requires:
                                provider_name: "lamassu_oidc_provider"
                            - match:
                                # Lamassu UI
                                prefix: "/"

                      - name: envoy.filters.http.router

              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    tls_certificates:
                      - certificate_chain: { filename: "/certs/downstream.crt" }
                        private_key: { filename: "/certs/downstream.key" }
                    validation_context:
                      trust_chain_verification: ACCEPT_UNTRUSTED
                        # filename: /certs/lamassu-dms-ca.crt

      clusters:
        - name: api_ca_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: lamassu-ca
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: lamassu-ca
                          port_value: 8087
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /v1/health
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              # mTLS config between API_GW and UPSTREAM Service
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: /certs/upstream.crt
                    private_key:
                      filename: /certs/upstream.key

        - name: api_device_manager_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: lamassu-device-manager
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: lamassu-device-manager
                          port_value: 8089
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /v1/health
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              # mTLS config between API_GW and UPSTREAM Service
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: /certs/upstream.crt
                    private_key:
                      filename: /certs/upstream.key
              
        - name: api_dms_enroller_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: lamassu-dms-enroller
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: lamassu-dms-enroller
                          port_value: 8085
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /v1/health
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              # mTLS config between API_GW and UPSTREAM Service
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: /certs/upstream.crt
                    private_key:
                      filename: /certs/upstream.key

        - name: api_cloud_proxy_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: lamassu-cloud-proxy
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: lamassu-cloud-proxy
                          port_value: 8081
          health_checks:
            - interval: 60s
              timeout: 2s
              interval_jitter: 1s
              unhealthy_threshold: 1
              healthy_threshold: 1
              http_health_check:
                path: /v1/health
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              # mTLS config between API_GW and UPSTREAM Service
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: /certs/upstream.crt
                    private_key:
                      filename: /certs/upstream.key
              
        - name: ui_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: ui_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ui
                          port_value: 443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

        - name: auth_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: auth_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: auth
                          port_value: 8443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

        - name: vault_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: vault_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: vault
                          port_value: 8200
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

        - name: consul_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: consul_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: consul
                          port_value: 8501
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext

        - name: jaeger_ui_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: jaeger_ui_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: jaeger
                          port_value: 16686

        - name: rabbitmq_api_cluster
          connect_timeout: 0.25s
          type: STRICT_DNS
          load_assignment:
            cluster_name: rabbitmq_api_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: rabbitmq
                          port_value: 15671
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                tls_certificates:
                  - certificate_chain:
                      filename: /certs/upstream.crt
                    private_key:
                      filename: /certs/upstream.key                   
---
apiVersion: apps/v1
kind: Deployment
metadata:  
  name: api-gateway-deployment
  namespace: {{.Release.Namespace}}
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: {{.Values.image.api_gateway}}
          volumeMounts:
            - name: api-gateway-yaml-config
              mountPath: /tmpl/envoy.yaml.tmpl
              subPath: config.yaml
            - name: api-gateway-down-tls-certificates
              mountPath: /certs/downstream.crt
              subPath: tls.crt
            - name: api-gateway-down-tls-certificates
              mountPath: /certs/downstream.key
              subPath: tls.key
            - name: api-gateway-down-tls-certificates
              mountPath: /certs/downstream-ca.crt
              subPath: tls.crt
            - name: api-gateway-up-tls-certificates
              mountPath: /certs/internal-ca.crt
              subPath: ca.crt
            - name: api-gateway-up-tls-certificates
              mountPath: /certs/upstream.crt
              subPath: tls.crt
            - name: api-gateway-up-tls-certificates
              mountPath: /certs/upstream.key
              subPath: tls.key
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 9900
          env:
            - name: DOMAIN
              value: {{.Values.domain}}
            - name: DEBUG_MODE
              value: "false"
          args:
          - "envoy"
          - "--config-path"
          - "/tmpl/envoy.yaml.tmpl"
      restartPolicy: Always
      volumes:
        - name: api-gateway-yaml-config
          configMap:  
            name: api-gateway-cm
        - name: api-gateway-down-tls-certificates
          secret:
            secretName: test
        - name: api-gateway-up-tls-certificates
          secret:
            secretName: test2
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: {{.Release.Namespace}}
spec:
  selector:
    app: api-gateway
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  - name: api-gateway
    port: 9900
    targetPort: 9900
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  name: api-gateway-ingress-https
  namespace: {{.Release.Namespace}}
  annotations: 
    # cert-manager.io/issuer: "lamassu-ca-issuer"
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  # tls:
  # - hosts:
  #   - {{.Values.domain}}
  #   - "*.{{.Values.domain}}"
  #   secretName: test
  rules:
  - host: {{.Values.domain}}
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "api-gateway"
            port:
              number: 443
  - host: consul.{{.Values.domain}}
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "api-gateway"
            port:
              number: 443
  - host: vault.{{.Values.domain}}
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "api-gateway"
            port:
              number: 443
  - host: rabbitmq.{{.Values.domain}}
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "api-gateway"
            port:
              number: 443
  - host: tracing.{{.Values.domain}}
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "api-gateway"
            port:
              number: 443
  - host: auth.{{.Values.domain}}
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "api-gateway"
            port:
              number: 443