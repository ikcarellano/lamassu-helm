apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: rabbitmq-cert
  namespace: {{.Release.Namespace}}
spec:
  isCA: false
  commonName: rabbitmq*
  dnsNames:
    - "rabbitmq"
    - "rabbitmq*"
  secretName: rabbitmq-cert-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: lamassu-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: rabbitmq-cm
  namespace: {{.Release.Namespace}}
data:
  rabbitmq.conf: |
    log.file.level = debug

    listeners.tcp = none

    listeners.ssl.default = 5671

    ssl_options.cacertfile = /certs/internal-ca.crt
    ssl_options.certfile   = /certs/tls.crt
    ssl_options.keyfile    = /certs/tls.key
    ssl_options.verify     = verify_none

    ssl_cert_login_from = common_name

    auth_backends.1   = rabbit_auth_backend_internal
    auth_mechanisms.1 = PLAIN
    auth_mechanisms.2 = EXTERNAL

    management.ssl.cacertfile = /certs/internal-ca.crt
    management.ssl.certfile   = /certs/tls.crt
    management.ssl.keyfile    = /certs/tls.key
    management.cors.allow_origins.1 = *
---
apiVersion: apps/v1
kind: Deployment
metadata:  
  name: rabbitmq-deployment
  namespace: {{.Release.Namespace}}
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: {{.Values.image.rabbitmq}}
          volumeMounts:
            - name: rabbitmq-json-config
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - name: rabbitmq-tls-certificates
              mountPath: /certs/tls.crt
              subPath: tls.crt
            - name: rabbitmq-tls-certificates
              mountPath: /certs/tls.key
              subPath: tls.key
            - name: rabbitmq-tls-certificates
              mountPath: /certs/internal-ca.crt
              subPath: ca.crt
          ports:
            - containerPort: 5671
            - containerPort: 15671
            
      restartPolicy: Always
      volumes:
        - name: rabbitmq-json-config
          configMap:  
            name: rabbitmq-cm
        - name: rabbitmq-tls-certificates
          secret:
            secretName: rabbitmq-cert-secret
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: {{.Release.Namespace}}
spec:
  selector:
    app: rabbitmq
  type: ClusterIP
  ports:
  - name: amqp
    port: 5671
    targetPort: 5671
  - name: https
    port: 15671
    targetPort: 15671
    protocol: TCP
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata: 
#   name: rabbitmq-ingress
#   namespace: {{.Release.Namespace}}
#   annotations: 
#     cert-manager.io/issuer: "lamassu-ca-issuer"
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
# spec:
#   tls:
#   - hosts:
#     - rabbitmq.{{.Values.domain}}
#     secretName: downstream-crt-secret
#   rules:
#   - host: rabbitmq.{{.Values.domain}}
#     http: 
#       paths:
#       - pathType: Prefix
#         path: /
#         backend: 
#           service: 
#             name: "rabbitmq"
#             port:
#               number: 15671