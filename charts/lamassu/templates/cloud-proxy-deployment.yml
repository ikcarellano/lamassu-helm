apiVersion: apps/v1
kind: Deployment
metadata:  
  name: cloud-proxy
  namespace: {{.Release.Namespace}}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: cloud-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-proxy
  template:
    metadata:
      labels:
        app: cloud-proxy
    spec:     
      containers:
        - name: cloud-proxy
          image: {{.Values.services.cloudProxy.image}}
          imagePullPolicy: Always
          tty: true          
          env:
            - name: SERVICE_NAME
              value: cloud-proxy
            - name: DEBUG_MODE
              value: "{{.Values.debugMode}}"
            - name: PORT
              value: "8085"
            - name: PROTOCOL
              value: https
            - name: CERT_FILE
              value: /certs/tls.crt
            - name: KEY_FILE
              value: /certs/tls.key
            - name: MUTUAL_TLS_ENABLED
              value: "true"
            - name: MUTUAL_TLS_CLIENT_CA
              value: /certs/internal-ca.crt
            - name: AMQP_SERVER_USE_BASIC_AUTH
              value: "true"
            - name: AMQP_SERVER_USERNAME
              value: "{{.Values.amqp.username}}"
            - name: AMQP_SERVER_PASSWORD
              value: "{{.Values.amqp.password}}"
            - name: AMQP_SERVER_ENABLE_TLS
              value: "{{.Values.amqp.tls}}"
            - name: AMQP_SERVER_HOST
              value: {{.Values.amqp.hostname}}
            - name: AMQP_SERVER_PORT
              value: "{{.Values.amqp.port}}"
            - name: AMQP_SERVER_CA_CERT
              value: /certs/internal-ca.crt

            - name: POSTGRES_HOSTNAME
              value: {{ .Values.postgres.hostname }}
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
            - name: POSTGRES_DATABASE
              value: cloudproxy
            - name: POSTGRES_USERNAME
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: CONSUL_PROTOCOL
              value: https
            - name: CONSUL_HOST
              value: consul-server
            - name: CONSUL_PORT
              value: "8501"
            - name: CONSUL_CA
              value: /certs/internal-ca.crt
            - name: LAMASSU_CA_ADDRESS
              value: https://ca:8085
            - name: LAMASSU_CA_CERT_FILE
              value: /certs/internal-ca.crt
            - name: LAMASSU_CONNECTORS_MUTUAL_TLS
              value: "true"
            - name: LAMASSU_CONNECTORS_CERT_FILE
              value: /certs/internal-ca.crt

          volumeMounts:
            - name: tls-certificates
              mountPath: /certs/tls.crt
              subPath: tls.crt
            - name: tls-certificates
              mountPath: /certs/tls.key
              subPath: tls.key
            - name: tls-certificates
              mountPath: /certs/internal-ca.crt
              subPath: ca.crt
          ports:
            - containerPort: 8085
      restartPolicy: Always
      volumes:
        - name: tls-certificates
          secret:
            secretName: cloud-proxy-upstream-cert