apiVersion: apps/v1
kind: Deployment
metadata:  
  name: alerts-deployment
  namespace: {{.Release.Namespace}}
  labels:
    app: alerts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alerts
  template:
    metadata:
      labels:
        app: alerts
    spec:     
      containers:
        - name: alerts
          image: {{.Values.services.alerts.image}}
          imagePullPolicy: Always
          env:
            - name: SERVICE_NAME
              value: alerts
            - name: DEPLOYMENT_ENVIRONMENT 
              value: production
            - name: JAEGER_EXPORTER_URL 
              value: "http://localhost:2020"
            - name: DEBUG_MODE
              value: "{{.Values.debugMode}}"
            - name: PORT
              value: "8085"
            - name: PROTOCOL
              value: https
            - name: CERT_FILE
              value: /certs/tls.crt
            - name: KEY_FILE
              value: /certs/tls.key
            - name: MUTUAL_TLS_ENABLED
              value: "true"
            - name: MUTUAL_TLS_CLIENT_CA
              value: /certs/internal-ca.crt
            - name: AMQP_SERVER_HOST
              value: rabbitmq
            - name: AMQP_SERVER_PORT
              value: "5671"
            - name: AMQP_SERVER_CA_CERT
              value: /certs/internal-ca.crt

            - name: POSTGRES_HOSTNAME
              value: postgresql-pgpool
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DATABASE
              value: alerts
            - name: POSTGRES_USER
              value: {{.Values.services.database.username}}
            - name: POSTGRES_PASSWORD
              value: {{.Values.services.database.password}}

            - name: SMTP_FROM
              value: {{.Values.services.alerts.smtp.from}}
            - name: SMTP_INSECURE
              value: "{{.Values.services.alerts.smtp.insecure}}"
            - name: SMTP_ENABLE_SSL
              value: "{{.Values.services.alerts.smtp.enable_ssl}}"
            - name: SMTP_USERNAME
              value: {{.Values.services.alerts.smtp.username}}
            - name: SMTP_PASSWORD
              value: {{.Values.services.alerts.smtp.password}}
            - name: SMTP_HOST
              value: {{.Values.services.alerts.smtp.host}}
            - name: SMTP_PORT
              value: "{{.Values.services.alerts.smtp.port}}"
            - name: TEMPLATE_HTML
              value: /app/templates/email.html
            - name: TEMPLATE_JSON
              value: /app/templates/config.json

          volumeMounts:
            - name: tls-certificates
              mountPath: /certs/tls.crt
              subPath: tls.crt
            - name: tls-certificates
              mountPath: /certs/tls.key
              subPath: tls.key
            - name: tls-certificates
              mountPath: /certs/internal-ca.crt
              subPath: ca.crt
          ports:
            - containerPort: 8085
      restartPolicy: Always
      volumes:
        - name: tls-certificates
          secret:
            secretName: alerts-upstream-cert